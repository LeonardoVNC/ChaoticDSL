grammar edu.upb.lp.Chaotic with org.eclipse.xtext.common.Terminals

generate chaotic "http://www.upb.edu/lp/Chaotic"

//Estructura del programa
Program:	
	'Te damos la bienvenida a : ' name = ID
	userSection = UserSection
	channelSection = ChannelSection
	execution = ChatSection
;

UserSection:
	{UserSection} 'Usuarios conectados:'
	(users += UserDeclaration+ | 'Vaya, parece que no hay nadie.')
;

ChannelSection:
	{ChannelSection} 'Canales disponibles:'
	(channels += ChannelOperation+ | 'Vaya, parece que no hay canales adicionales.')
;

ChatSection:
	{ChatSection} 'Chat #General'
	'Hola muchachada!'
	body=InstructionBody
	'Mañana hay examen de compilación, nos vimo :p'
;

//Gramática para UserSection, Variables
UserDeclaration:
	'Saluden a' '@' name=ID 'el nuevo miembro de' '$' type=DataType '.'
;

//Gramática para ChannelSection
ChannelOperation:
	'Se ha creado un nuevo canal llamado' 
	'#' name=ID	':'
	body=InstructionBody
	'Esperemos sea de su agrado.'
;

ParamField:
	'$' type=DataType 'también llamado' name=ID
;

InstructionBody:
	{InstructionBody} 
	(asignations+=UserAsignation | prints+=PrintLine | ifs+=IfInstruction | whiles+=WhileInstruction | channels+=ChannelCall | exeptions+=BanException)*
;

//Operaciones - Body
UserAsignation:
	user=[UserDeclaration] 'ha cambiado su descripción a:' value=Expression'.'
;

PrintLine:
	'Que tal todo ' value=[UserDeclaration]'?'
;

IfInstruction:
	'ATENCION! Si'
	condition=Expression
	'procederemos a:' 
	body=InstructionBody
	'Gracias por su atención.' 
;

WhileInstruction:
	'AVISO! Mientras'
	condition=Expression
	'se procederá a:'
	body=InstructionBody
	'Gracias por su atención.'
;

ChannelCall:
	'Nada que ver su conversacion, vayan a' 
	'#'name=[ChannelOperation] 
	'y dejen de molestar aca'
;

//Tipos de Datos
enum DataType:
	EnteroType = 'R20s' | BoolType='Teleco' | CadenasType = 'ComeLibros' | DecType='LosReales'
;

//Expressions
Expression:
	(
		singleExpr = SingleExpression | 
		singleOpExpr = SingleOperatorExpression |
		userRef = UserDataReference |
		parenthesisExpr = ParenthesisExpression
	)
	(second = TempExpression)
;

FollowExpression:
	(
		singleExpr = SingleExpression | 
		singleOpExpr = SingleOperatorExpression |
		userRef = UserDataReference |
		parenthesisExpr = ParenthesisExpression
	)
;

TempExpression:
	(operador=PairOperator secondValue=FollowExpression follow=TempExpression)?
;


SingleExpression:
	literal = (IntLiteral | DecLiteral | BoolLiteral | CadenasLiteral) 
;

enum PairOperator:
	Plus = 'sumando a' | Less = 'restando a' | Mult = 'multiplicando a' | Div = 'dividiendo a' | 
	And = 'y además' | Or = 'o por otro lado' | 
	Equal = 'es igual a' | EqualP = 'sea igual a' | 
	Greater = 'le gana a' | GreaterP = 'le gane a' | 
	GreaterEq = 'le podria ganar a' | GreaterEqP = 'le pueda ganar a' | 
	Concat = 'junto a'
;

enum SingleOperator:
	BoolNegation = 'Ignoren a ese' | 
	IntNegative = 'Salio medio negativo el' | 
	IntPlusOne = 'Mejorando poco a poco'
;

SingleOperatorExpression:
	operator = SingleOperator expression=FollowExpression
;


UserDataReference:
	'@' user=[UserDeclaration]
;

ParenthesisExpression:
	'(' expression = FollowExpression ')'
;

//Literals
IntLiteral:
	value = INT
;

DecLiteral:
	mainValue = INT '.' decimalValue=INT
;	

BoolLiteral:
	value=('true' | 'false')
;

CadenasLiteral:
	value=STRING
;

BanException:
	{BanException} 
	'Silenciar todos los canales del servidor.'
	(description_flag ?= 'Motivo:' description = CadenasLiteral)?
	'Traten de cumplir las reglas del seridor.'
;


//Comentarios
@Override 
terminal ML_COMMENT : 'Por cierto...' -> 'nada eso...';
@Override 
terminal SL_COMMENT : 'Ah si,' !('\n'|'\r')* ('\r'? '\n')?;
